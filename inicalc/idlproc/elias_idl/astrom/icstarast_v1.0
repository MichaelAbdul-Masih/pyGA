;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
function residuals, cd_column_vector
common data, xpos, ypos, ra, dec, crvalc, crpixc

cd = dblarr(2,2)
cd(0,0)=cd_column_vector(0)
cd(1,0)=cd_column_vector(1)
cd(0,1)=cd_column_vector(2)
cd(1,1)=cd_column_vector(3)

ra_model=cd(0,0)*(xpos-crpixc(0))+cd(1,0)*(ypos-crpixc(1)) + crvalc(0) 
dec_model=cd(0,1)*(xpos-crpixc(0))+cd(1,1)*(ypos-crpixc(1)) + crvalc(1)

sumofsquares=total((ra-ra_model)^2 +(dec-dec_model)^2)

return,sumofsquares
end
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


pro icstarast, x, y, ra, dec, cd, crval, crpix
;+
; NAME:
;       ICSTARAST
;
; PURPOSE:
;       Finds a least squares astrometric solution for an 
;       array of x,y and ra,dec positions. Generalises the
;       astrolib routine starast to >3 objects.
;
; CALLING SEQUENCE:
;       icstarast, x, y, ra, dec, cd, crval, crpix
;
; INPUTS:
;       x, y: arrays of star positions in pixel coords
;       ra, dec: right ascension and declination of stars
;
; OPTIONAL INPUTS:
;       none
;
; KEYWORD PARAMETERS:
;       none
;
; EXAMPLE:
;       icstarast, x, y, ra, dec, cd, crval, crpix
;
; MODIFICATION HISTORY:
;       Written by:     Stephen Serjeant  11 Mar 1997
;        residuals function put at top so it compiles seb June 1997
;          Any modifications get described here
;-

common data, xc, yc, rac, decc, crvalc, crpixc

crvalc=1.0d*[1.0,1.0]
crpixc=1.0d*[1.0,1.0]
xc=x
yc=y
rac=ra
decc=dec


; Make up an initial guess
ra_test=ra(0:2) & dec_test=dec(0:2) & x_test=x(0:2) & y_test=y(0:2)
ra_test=ra_test-189.0
dec_test=dec_test-62.0
starast,ra_test,dec_test,x_test,y_test,cd
crvalc = [ra_test(0)+189.0d,dec_test(0)+62.0d]
crpixc = [x_test(0),y_test(0)] +1

crval=crvalc
crpix=crpixc

cd_column_vector=[cd(*)]
directions=fltarr(4,4)
directions(*) = 0.05*min(cd)
for i=0,3 do directions(i,i)=0.1*cd_column_vector(i)

tolerance = 1.0e-5

powell, cd_column_vector, directions, tolerance, $
              minimum_value, 'residuals'

cd(*)=cd_column_vector(*)
print,cd
print,'Minimum value=',minimum_value
return
end
